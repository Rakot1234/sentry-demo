{"version":3,"sources":["types.ts","RenderErrors/RenderErrors.tsx","Navigation/Navigation.tsx","HandlersErrors/HandlersErrors.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PagesEnum","InputsNamesEnum","MAIN","RENDER_ERROR","WITHOUT_SENTRY","routesMap","Navigation","pathname","useLocation","isMainPage","isRenderPage","includes","isWithoutSentryPage","linkClass","activeLinkClass","className","to","HandlersErrors","useState","isErrorHandled","setErrorHandle","buttonClass","useEffect","timeout","setTimeout","clearTimeout","onClick","Error","someObject","undefined","value","ex","Sentry","NAME","SURNAME","RenderErrors","seconds","timer","setTimer","name","surname","formState","setFormState","interval","clearInterval","handleInputChange","target","inputName","isNameChange","prevName","prevSurname","setInterval","currentSeconds","placeholder","onChange","App","fallback","showDialog","history","createBrowserHistory","path","exact","beforeCapture","scope","setTag","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dsn","process","integrations","Integrations","BrowserTracing","tracesSampleRate","beforeSend","event","exception","eventId","event_id","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab084835.chunk.js","sourcesContent":["const isDevelop = process.env.NODE_ENV === 'development';\n\nexport enum PagesEnum {\n    MAIN = 'main',\n    RENDER_ERROR = 'render-error',\n    WITHOUT_SENTRY = 'without-sentry',\n};\n\nconst { MAIN, RENDER_ERROR, WITHOUT_SENTRY } = PagesEnum;\n\nexport const routesMap: Record<PagesEnum, string> = {\n    [MAIN]: isDevelop ? '/' : '/sentry-demo',\n    [RENDER_ERROR]: isDevelop ? '/render-error' : '/sentry-demo/render-error',\n    [WITHOUT_SENTRY]: isDevelop ? '/without-sentry' : '/sentry-demo/without-sentry',\n};\n","import React, { useEffect, useState } from 'react';\nimport './RenderErrors.css';\n\nconst SECONDS_BEFORE_ERROR = 3;\n\ninterface ITimerState {\n    seconds: number;\n};\n\ninterface IFormState {\n    name: string,\n    surname: string,\n};\n\nenum InputsNamesEnum {\n    NAME = 'name',\n    SURNAME = 'surname',\n};\n\nconst { NAME, SURNAME } = InputsNamesEnum;\n\nconst RenderErrors: React.FC = () => {\n    const [timer, setTimer] = useState<ITimerState>({ seconds: 0 });\n    const [formState, setFormState] = useState<IFormState>({ name: '', surname: '' });\n\n    let interval: NodeJS.Timeout | undefined = undefined;\n\n    useEffect(() => {\n        return () => interval && clearInterval(interval);\n    }, [interval]);\n\n    const handleSetTimer = (): void => {\n        setTimer(({ seconds: currentSeconds }) => {\n            const isErrorTime = currentSeconds > SECONDS_BEFORE_ERROR;\n\n            return isErrorTime ? undefined as unknown as ITimerState : { ...timer, seconds: currentSeconds + 1 }\n        });\n    };\n\n    const handleTimerStart = (): void => {\n        interval = setInterval(() => handleSetTimer(), 1000);\n    };\n\n    const handleInputChange = ({ target: { name: inputName, value } }: React.ChangeEvent<HTMLInputElement>): void => {\n        const isNameChange = inputName === NAME;\n\n        setFormState(({ name: prevName, surname: prevSurname }) => ({\n            name: isNameChange ? value : prevName,\n            surname: !isNameChange ? value : prevSurname,\n        }));\n    };\n\n    const handleFormSubmit = (): void => setFormState(undefined as unknown as IFormState);\n\n    return (\n        <div className=\"render-errors\">\n            <div className=\"render-errors__tile\">\n                <h3>Error while using timer</h3>\n                {`Прошло времени: ${timer.seconds} сек.`}\n                <button className=\"render-errors__button\" onClick={handleTimerStart}>Start timer</button>\n            </div>\n            <div className=\"render-errors__tile\">\n                <h3>Error on form submit</h3>\n                <form>\n                    <input\n                        className=\"render-errors__input\"\n                        name={NAME}\n                        placeholder=\"Имя\"\n                        value={formState.name}\n                        onChange={handleInputChange}\n                    />\n                    <input\n                        className=\"render-errors__input\"\n                        name={SURNAME}\n                        placeholder=\"Фамилия\"\n                        value={formState.surname}\n                        onChange={handleInputChange}\n                    />\n                </form>\n                <button className=\"render-errors__button\" onClick={handleFormSubmit}>Submit</button>\n            </div>\n        </div>\n    );\n};\n\nexport default RenderErrors;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { PagesEnum, routesMap } from '../types';\nimport './Navigation.css';\n\nconst { MAIN, RENDER_ERROR, WITHOUT_SENTRY } = PagesEnum;\n\nconst Navigation: React.FC = () => {\n    const { pathname } = useLocation();\n\n    const isMainPage = pathname === routesMap[MAIN];\n    const isRenderPage = pathname.includes(routesMap[RENDER_ERROR]);\n    const isWithoutSentryPage = pathname.includes(routesMap[WITHOUT_SENTRY]);\n\n    const linkClass = 'navigation__link';\n    const activeLinkClass = 'navigation__link navigation__link_active';\n\n    return (\n        <div className=\"navigation\">\n            <Link className={isMainPage ?  activeLinkClass : linkClass} to={routesMap[MAIN]}>\n                <span className=\"navigation__text\">Handlers errors</span>\n            </Link>\n            <Link className={isRenderPage ? activeLinkClass : linkClass} to={routesMap[RENDER_ERROR]}>\n                <span className=\"navigation__text\">Render errors</span>\n            </Link>\n            <Link className={isWithoutSentryPage ? activeLinkClass : linkClass} to={routesMap[WITHOUT_SENTRY]}>\n                <span className=\"navigation__text\">Without sentry</span>\n            </Link>\n        </div>\n    );\n};\n\nexport default Navigation;\n","import React, { useEffect, useState } from 'react';\nimport './HandlersErrors.css';\nimport * as Sentry from '@sentry/react';\n\nconst HandlersErrors: React.FC = () => {\n    const [isErrorHandled, setErrorHandle] = useState(false);\n\n    const buttonClass = isErrorHandled ? 'handlers-errors__button handlers-errors__button_disabled' : 'handlers-errors__button';\n\n    useEffect(() => {\n        if (!isErrorHandled) {\n            return;\n        }\n\n        const timeout = setTimeout(() => setErrorHandle(false), 3000);\n\n        return (): void => clearTimeout(timeout);\n    }, [isErrorHandled]);\n\n    const handleErrorThrow = (): void => {\n        throw Error('error');\n    };\n\n    const hiddenSentryHandler = (): void => {\n        let someObject = undefined as any;\n\n        try {\n            someObject.value = 20;\n        } catch(ex) {\n            Sentry.captureException(ex);\n            setErrorHandle(true);\n        }\n    };\n\n    return (\n        <div className=\"handlers-errors\">\n            <button className=\"handlers-errors__button\" onClick={handleErrorThrow}>Error throw</button>\n            <button className={buttonClass} onClick={hiddenSentryHandler}>{isErrorHandled ? 'Error handled' : 'Hidden handler'}</button>\n        </div>\n    );\n};\n\nexport default HandlersErrors;\n","import React from 'react';\nimport './App.css';\nimport { ErrorBoundary } from \"@sentry/react\";\nimport { Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Navigation from './Navigation/Navigation';\nimport HandlersErrors from './HandlersErrors/HandlersErrors';\nimport RenderErrors from './RenderErrors/RenderErrors';\nimport { createBrowserHistory } from 'history';\nimport { PagesEnum, routesMap } from './types';\n\nconst { MAIN, RENDER_ERROR, WITHOUT_SENTRY } = PagesEnum;\n\nconst App: React.FC = () => (\n    <div className=\"app\">\n        <div className=\"app__wrapper\">\n            <ErrorBoundary fallback={<div className=\"app__fallback\">Some Error</div>} showDialog>\n                <Router history={createBrowserHistory()}>\n                    <Navigation />\n                    <div className=\"app__content\">\n                        <Switch>\n                            <Route path={routesMap[MAIN]} exact>\n                                <ErrorBoundary\n                                    beforeCapture={(scope) => { scope.setTag('location', 'handlers') }}\n                                    fallback={<div className=\"app__fallback\">Some Error</div>}\n                                >\n                                    <HandlersErrors />\n                                </ErrorBoundary>\n                            </Route>\n                            <Route path={routesMap[RENDER_ERROR]} exact>\n                                <ErrorBoundary\n                                    beforeCapture={(scope) => { scope.setTag('location', 'render') }}\n                                    fallback={<div className=\"app__fallback\">Some Error</div>}\n                                >\n                                    <RenderErrors />\n                                </ErrorBoundary>\n                            </Route>\n                            <Route path={routesMap[WITHOUT_SENTRY]} exact>\n                                <RenderErrors />\n                            </Route>\n                            <Route>\n                                <Redirect to={MAIN} />\n                            </Route>\n                        </Switch>\n                    </div>\n                </Router>\n            </ErrorBoundary>\n        </div>\n    </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-snapshot';\nimport * as Sentry from '@sentry/react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Integrations } from '@sentry/tracing';\n\nSentry.init({\n  dsn: process.env.REACT_APP_SENTRY_DSN,\n  integrations: [new Integrations.BrowserTracing()],\n  tracesSampleRate: 1.0,\n  beforeSend(event) {\n    if (event.exception) {\n      Sentry.showReportDialog({ eventId: event.event_id });\n    }\n    return event;\n  },\n});\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}